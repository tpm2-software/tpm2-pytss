from typing import Optional, Any, Dict

class Boolean:
    _trailer: bytes
class ObjectIdentifier:
    def __init__(self, oid: str): ...
    native: Optional[str]
class Sequence:
    def __setitem__(self, key: str, value: Any) -> None: ...
    def __getitem__(self, key: str) -> Any: ...
    def dump(self, force: bool = False) -> bytes: ...
    @classmethod
    def load(cls, encoded_data: bytes, strict: bool = False, **kwargs: Dict[str, Any]) -> "Sequence": ...

class Integer: ...
class OctetString: ...
